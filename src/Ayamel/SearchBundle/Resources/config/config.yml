imports:
    - { resource: "@AyamelSearchBundle/Resources/config/config.ayamel_index.yml" }
    - { resource: "@AyamelSearchBundle/Resources/config/config.lang_mappings.yml" }

parameters:
    #during batch operations, how many to send to ES at once
    ayamel.search.elastica_resource_provider.batch: 100
    
    #only these types of resources are included as searchable in the index
    ayamel.search.indexable_resource_types: ['document','collection','audio','video','image']

    #only content from file references with this mime type will be included as searchable text
    ayamel.search.indexable_mime_types: ['text/plain']
    
    #text encoding for sending to ES must be UTF-8, so detect encodings if possible in this order
    #WARNING: order matters, use the most specific ones first
    ayamel.search.indexable_encoding_check_order: ['UTF-32', 'UTF-16', 'ASCII', 'UTF-8', 'Windows-1251', 'Windows-1252']

    ayamel.search.rabbitmq_producer:
        connection: default
        exchange_options: { name: %search_index_queue_name%, type: direct }

    ayamel.search.rabbitmq_consumer:
        connection: default
        exchange_options: { name: %search_index_queue_name%, type: direct }
        queue_options:    { name: %search_index_queue_name% }
        callback:         ayamel.search_index.consumer

services:
    ayamel.search_index.subscriber:
        class: Ayamel\SearchBundle\RabbitMQ\SearchIndexSubscriber
        arguments: [@service_container]
        tags:
            - { name: ayamel.api.event_subscriber }

    ayamel.search_index.consumer:
        class: Ayamel\SearchBundle\RabbitMQ\SearchIndexConsumer
        arguments: [@service_container]

    ayamel.search.resource_indexer:
        class: Ayamel\SearchBundle\ResourceIndexer
        arguments:
            - @doctrine.odm.mongodb.document_manager
            - @fos_elastica.index.ayamel.resource
            - @serializer
            - %ayamel.search.indexable_mime_types%
            - %ayamel.search.indexable_resource_types%
            - %ayamel.search.indexable_encoding_check_order%
            - @logger
            - %ayamel.search.language_field_map%
        tags:
            - { name: monolog.logger, channel: search }

    ayamel.search.elastica_resource_provider:
        class: Ayamel\SearchBundle\Provider\ResourceProvider
        arguments:
            - @ayamel.search.resource_indexer
            - %ayamel.search.elastica_resource_provider.batch%
            - @doctrine.odm.mongodb.document_manager
        tags:
            - { name: fos_elastica.provider, index: ayamel, type: resource }
